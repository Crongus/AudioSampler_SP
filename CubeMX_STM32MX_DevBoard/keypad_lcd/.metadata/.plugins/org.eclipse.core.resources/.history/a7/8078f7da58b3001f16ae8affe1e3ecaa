/*
 * lcdhandler.c
 *
 *  Created on: Dec 4, 2024
 *      Author: Isaac Terrell using driver by Olivier Van den Eede and Aleksander Alekseev
 *      See https://github.com/afiskon/stm32-ssd1306
 */

#include "ssd1306.h"
#include "ssd1306_tests.h"
#include "ssd1306_conf.h"
#include "ssd1306_fonts.h"

#include "main.h"

void LCD_Init() {
	ssd1306_Init();
	ssd1306_Fill(White);
	ssd1306_SetCursor(2, 2);
	ssd1306_WriteString("Clip", Font_6x8, Black);
	ssd1306_SetCursor(52, 2);
	ssd1306_WriteString("||||||||||||", Font_6x8, Black);
	ssd1306_SetCursor(2, 12);
	ssd1306_WriteString("Stored", Font_6x8, Black);
	ssd1306_SetCursor(2, 22);
	ssd1306_WriteString("Active", Font_6x8, Black);
	ssd1306_SetCursor(2, 32);
	ssd1306_WriteString("Pitch 0", Font_6x8, Black);
	ssd1306_SetCursor(2, 42);
	ssd1306_WriteString("Mode--------", Font_6x8, Black);
	ssd1306_SetCursor(82, 42);
	ssd1306_WriteString("REC", Font_6x8, Black);
	ssd1306_SetCursor(2, 52);
	ssd1306_WriteString("Source------", Font_6x8, Black);
	ssd1306_SetCursor(82, 52);
	ssd1306_WriteString("DIGITAL", Font_6x8, Black);
	ssd1306_UpdateScreen();
	return;
}


/* clip is 1-12 one indexed.
 * row is a boolean 0=storage row 1=activity row.
 * state is a boolean 0=clear 1=fill.
 * We don't need any handling to check the preexisting state,
 * a redundant operation does not hurt anything.
 */
void DisplayClipsUpd(int clip, int row, int state) {
	uint16_t CoordX = 52 + ((clip -1) * 6);
	//Get the X position we're going to want to set the cursor to.
	//The font is fixed width 6x8
	uint16_t CoordY;
	if (row) {
		CoordY = 22; //activity row Y height
	} else {
		CoordY = 12; //storage row Y height
	}
	ssd1306_SetCursor(CoordX, CoordY);
	if (state) {
		ssd1306_WriteString("|", Font_6x8, Black);
	} else {
		ssd1306_WriteString(" ", Font_6x8, Black);
	}
	ssd1306_UpdateScreen();
	return;
}

/* setting is a boolean 0=mode 1=input.
 * The meaning of state depends upon the setting value passed
 * setting=0 ---> state is 0=record 1=playback
 * setting=1 ---> state is 0=digital 1=analog
 * This function will clear the Source row if mode set PLAYBACK and will
 * refill it with Source=Digital if mode set RECORD. It is not
 * necessary to call the function a second time.
 * As with ClipsUpd we don't check prior state because it's a
 * don't-care.
 */
void DisplayModeUpd(int setting, int state) {
	uint16_t CoordX = 82; //These lines start at this fixed X position
	uint16_t CoordY;
	char *String0, *String1;
	if (setting) {
		CoordY = 52;
		String0 = "DIGITAL";
		String1 = "ANALOG ";
	} else {
		CoordY = 42;
		String0 = "REC ";
		String1 = "PLAY";
	}
	ssd1306_SetCursor(CoordX, CoordY);
	if (state) {
		ssd1306_WriteString(String1, Font_6x8, Black);
	} else {
		ssd1306_WriteString(String0, Font_6x8, Black);
	}
	/*
	 * Following is:
	 * If setting the MODE and it's PLAYBACK, then
	 * fill the INPUT row blank.
	 */
	if (!setting && state) {
		ssd1306_SetCursor(2, 52);
		ssd1306_WriteString("                     ", Font_6x8, Black);
		//128-wide screen / 6x8 font and X offset 2 pixels =
		//21 spaces blanks the row
	}
	ssd1306_UpdateScreen();
	return;
}
